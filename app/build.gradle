plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.hilt)
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    namespace 'br.com.thiago.armazemdigital'
    compileSdk 34

    defaultConfig {
        applicationId "br.com.thiago.armazemdigital"
        minSdk 27
        targetSdk 34
        versionCode 1
        versionName "01.00.00-SNAPSHOT"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Obtém Hash do git acessível no código
        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    implementation libs.lombok
    implementation libs.room.common
    implementation libs.room.runtime
    implementation libs.hilt.android
    implementation libs.hilt.nav
    implementation libs.hilt.nav.fragment
    implementation libs.slf4j.api
    implementation libs.logback
    testImplementation libs.junit
    testImplementation libs.mockitoCore
    testImplementation libs.mockitoInline
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    annotationProcessor libs.lombok
    annotationProcessor libs.room.compiler
    annotationProcessor libs.navigation.generator
    annotationProcessor libs.hilt.compiler
}